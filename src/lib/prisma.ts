// lib/prisma.js or lib/prisma.ts

import {
  ApproversListTable,
  CompanyTable,
  GoodStatusTable,
  InvoiceTable,
  PaymentTable,
  ProductCategoryTable,
  ProductTable,
  QualityAssuranceTable,
  QuotationTable,
  RFPProductTable,
  RFPTable,
} from "@/drizzle/schema";

export const modelMap: Record<string, any> = {
  company: {
    model: CompanyTable,
    attributes: [
      "id",
      "name",
      "address",
      "email",
      "phone",
      "website",
      "industry",
      "foundedDate",
      "status",
      "created_at",
      "updated_at",
    ],
  },
  // vendor: {
  //   model: prisma.vendor,
  //   attributes: [
  //     "id",
  //     "customerCode",
  //     "primaryName",
  //     "companyName",
  //     "contactDisplayName",
  //     "email",
  //     "workPhone",
  //     "mobile",
  //     "website",
  //     "openingBalance",
  //     "gstin",
  //     "msmeNo",
  //     "address",
  //     "currency",
  //     "customerTerms",
  //     "customerState",
  //     "customerCity",
  //     "country",
  //     "zip",
  //     "fax",
  //     "dlNumber",
  //     "remarks",
  //     "openingType",
  //     "pan",
  //     "productCategoryId",
  //     "created_at",
  //     "updated_at",
  //   ],
  // },
  payment: {
    model: PaymentTable,
    attributes: ["id", "invoiceId", "created_at", "updated_at"],
  },
  productCategory: {
    model: ProductCategoryTable,
    attributes: ["id", "name", "created_at", "updated_at"],
  },
  // po: {
  //   model: prisma.pO,
  //   attributes: ["id", "quotationId", "userId", "created_at", "updated_at"],
  // },
  goodStatus: {
    model: GoodStatusTable,
    attributes: [
      "id",
      "invoiceId",
      "deliveryStatus",
      "qualityAssurance",
      "qualityAssuranceLeaderId",
      "created_at",
      "updated_at",
    ],
  },
  product: {
    model: ProductTable,
    attributes: [
      "id",
      "name",
      "modelNo",
      "specification",
      "productCategoryId",
      "created_at",
      "updated_at",
    ],
  },
  invoice: {
    model: InvoiceTable,
    attributes: ["id", "poId", "created_at", "updated_at"],
  },
  quotation: {
    model: QuotationTable,
    attributes: [
      "id",
      "rfpId",
      "vendorId",
      "billAmount",
      "created_at",
      "updated_at",
    ],
  },
  qualityAssurance: {
    model: QualityAssuranceTable,
    attributes: ["id", "userId", "created_at", "updated_at"],
  },
  rfpProduct: {
    model: RFPProductTable,
    attributes: [
      "id",
      "rfpId",
      "productId",
      "quantity",
      "created_at",
      "updated_at",
    ],
  },
  approversList: {
    model: ApproversListTable,
    attributes: [
      "id",
      "rfpId",
      "approverId",
      "approved",
      "approvedAt",
      "created_at",
      "updated_at",
    ],
  },
};

export const rfpModel = {
  model: RFPTable,
  attributes: [
    "id",
    "rfpId",
    "requirementType",
    "dateOfOrdering",
    "deliveryLocation",
    "deliveryByDate",
    "userId",
    "rfpStatus",
    "quotations",
    "preferredVendorId",
    "preferredQuotationId",
    "created_at",
    "updated_at",
  ],
};
